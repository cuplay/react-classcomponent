{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/cascader/style/css\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"D:\\\\desk\\\\\\u5C1A\\u7845\\u8C37React\\u5168\\u6808\\u9879\\u76EE\\u3010\\u8C37\\u7C92\\u540E\\u53F0\\u3011\\u6559\\u7A0B\\\\React-admin\\\\src\\\\pages\\\\product\\\\add-update.jsx\";\nimport React, { Component } from \"react\";\nimport LinkButton from \"../../component/link-button\";\nimport { RollbackOutlined } from \"@ant-design/icons\";\nimport { options } from \"less\";\nimport { reqCategorys, reqAddProduct } from \"../../api\";\nimport PicturesWall from \"./pictures-wall\";\nimport PropTypes from \"prop-types\";\nimport RichTextEditor from \"./rich-text-editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _Form.Item;\nconst TextArea = _Input.TextArea;\nexport default class AddUpdate extends Component {\n  constructor(props) {\n    super(props); //创造保存ref标识的标签对象的容器\n\n    this.state = {\n      options: [],\n      setOptions: () => {},\n      cName1: \"\",\n      cName2: \"\"\n    };\n\n    this.getCategorys = async parentId => {\n      const result = await reqCategorys(parentId); // debugger\n\n      if (result.data.status === 0) {\n        const categorys = result.data.data;\n\n        if (parentId === \"0\") {\n          this.initOptions(categorys);\n        } else {\n          return categorys; //返回\n        } // console.log(categorys)\n\n      }\n    };\n\n    this.initOptions = async categorys => {\n      const options = categorys.map(c => ({\n        //注意小括号\n        value: c._id,\n        label: c.name,\n        isLeaf: false\n      })); //如果是一个二级分类列表\n\n      const {\n        isUpdate,\n        product\n      } = this;\n      const {\n        pCategoryId,\n        categoryId\n      } = product;\n\n      if (isUpdate && pCategoryId !== \"0\") {\n        //获取对应的二级分类列表\n        const subCategorys = await this.getCategorys(pCategoryId); //生成二级下拉列表的options\n\n        const childOptions = subCategorys.map(c => ({\n          //注意小括号,生成二级列表\n          value: c._id,\n          label: c.name,\n          isLeaf: true\n        })); //关联到对应的一级option\n        //找到对应的一级对象\n        //   debugger\n\n        const targetOption = options.find(option => option.value === pCategoryId);\n\n        if (targetOption) {\n          //如果找到\n          targetOption.children = childOptions;\n        }\n      } // console.log(options)\n\n\n      this.setState({\n        options\n      }); // console.log(this.state.options)\n    };\n\n    this.onChange = (value, selectedOptions) => {\n      console.log(value, selectedOptions);\n    };\n\n    this.loadData = async selectedOptions => {\n      const targetOption = selectedOptions[selectedOptions.length - 1]; //显示loading\n\n      targetOption.loading = true; //   load options lazily\n      //获取二级分类列表\n\n      const subCategorys = await this.getCategorys(targetOption.value); // console.log(subCategorys)\n\n      if (subCategorys && subCategorys.length > 0) {\n        const cOptions = subCategorys.map(c => ({\n          //注意小括号,生成二级列表\n          value: c._id,\n          label: c.name,\n          isLeaf: true\n        }));\n        targetOption.children = cOptions;\n      } else {\n        //当前分类没有二级分类\n        targetOption.isLeaf = true;\n      }\n\n      targetOption.loading = false;\n      this.setState({\n        options: [...this.state.options]\n      });\n    };\n\n    this.pw = /*#__PURE__*/React.createRef();\n    this.editor = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.getCategorys(\"0\");\n  }\n  /* async返回值是新的promise对象,promise结果和值由async的结果 */\n\n\n  //如何判断是修改还是更新\n  UNSAFE_componentWillMount() {\n    console.log(this.props.location);\n    const product = this.props.location.state.desc; //保存是否更新的表示\n\n    this.isUpdate = !!product;\n    this.product = product || {};\n  }\n\n  render() {\n    const {\n      isUpdate\n    } = this;\n\n    const title = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n        onClick: () => this.props.history.goBack(),\n        children: /*#__PURE__*/_jsxDEV(RollbackOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), isUpdate ? \"修改商品\" : \"添加商品\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n\n    const formItemLayout = {\n      labelCol: {\n        span: 3\n      },\n      //左侧label宽度\n      wrapperCol: {\n        span: 8\n      } //右侧包裹输入框宽度\n\n    };\n\n    const onFinish = async values => {\n      //调用接口请求函数去添加/更新\n      //   console.log(\"Success:\", values);\n      const imgs = this.pw.current.getImgs();\n      const detail = this.editor.current.getDetail(); //   console.log('imgs',imgs)\n\n      this.product.name = values.name;\n      this.product.desc = values.desc;\n      this.product.price = values.price;\n\n      if (values.categoryIds.length > 1) {\n        this.product.pCategoryId = values.categoryIds[0];\n        this.product.categoryId = values.categoryIds[1];\n      } else {\n        this.product.pCategoryId = '0';\n        this.product.categoryId = values.categoryIds[0];\n      }\n\n      this.product.imgs = imgs;\n      this.product.detail = detail; //   console.log(this.product)\n\n      debugger;\n      const result = await reqAddProduct(this.product);\n      console.log(result);\n\n      if (result.data.status === 0) {\n        _message.success(`${this.isUpdate ? '更新' : '添加'}商品成功`);\n\n        this.props.history.goBack();\n      } else {\n        _message.error(`${this.isUpdate ? '更新' : '添加'}商品失败`);\n      }\n    };\n\n    const tailLayout = {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      }\n    };\n\n    const onFinishFailed = errorInfo => {\n      console.log(\"Failed:\", errorInfo);\n    }; // function onChange(value) {\n    //   console.log(value);\n    // }\n\n\n    const {\n      name,\n      desc,\n      price,\n      detail,\n      imgs,\n      pCategoryId,\n      categoryId\n    } = this.product;\n    const categoryIds = [];\n\n    if (isUpdate) {\n      //   console.log(\"pCategoryId\", pCategoryId);\n      if (pCategoryId !== \"0\") {\n        categoryIds.push(pCategoryId);\n      }\n    }\n\n    categoryIds.push(categoryId);\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(_Form, {\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        ...formItemLayout,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"name\",\n          label: \"\\u5546\\u54C1\\u540D\\u79F0\",\n          initialValue: name,\n          rules: [{\n            required: true,\n            message: \"必须输入商品名称!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u540D\\u79F0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"desc\",\n          label: \"\\u5546\\u54C1\\u63CF\\u8FF0\",\n          initialValue: desc,\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u63CF\\u8FF0\",\n            autoSize: {\n              minRows: 2,\n              maxRows: 6\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"price\",\n          label: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n          initialValue: price,\n          rules: [{\n            required: true,\n            message: \"必须输入商品价格!\"\n          }, {\n            validator: (_, value) => !value || value * 1 > 0 ? Promise.resolve() : Promise.reject(new Error(\"商品价格必须大于0\"))\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            type: \"number\",\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u4EF7\\u683C\",\n            addonAfter: \"\\u5143\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"categoryIds\",\n          label: \"\\u5546\\u54C1\\u7C7B\\u522B\",\n          rules: [{\n            required: true,\n            message: \"必须选择商品类别!\"\n          }],\n          initialValue: categoryIds,\n          children: /*#__PURE__*/_jsxDEV(_Cascader, {\n            placeholder: \"\\u8BF7\\u9009\\u62E9\",\n            options: this.state.options,\n            loadData: this.loadData,\n            onChange: this.onChange,\n            changeOnSelect: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"imgs\",\n          label: \"\\u5546\\u54C1\\u56FE\\u7247\",\n          initialValue: name,\n          rules: [{\n            required: true,\n            message: \"必须输入商品名称!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(PicturesWall, {\n            ref: this.pw,\n            imgs: imgs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"detail\",\n          label: \"\\u5546\\u54C1\\u8BE6\\u60C5\",\n          labelCol: {\n            span: 3\n          },\n          wrapperCol: {\n            span: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(RichTextEditor, {\n            ref: this.editor,\n            detail: detail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, { ...tailLayout,\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/* 子组件调用父组件的方法:将父组件的方法以函数属性的形式传递给子组件,子组件就可以调用\r\n父组件调用子组件的方法 :在父组件忠通过ref得到子组件标签对象(组件对象),调用其方法*/\n\nAddUpdate.propTypes = {\n  imgs: PropTypes.array\n};","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/pages/product/add-update.jsx"],"names":["React","Component","LinkButton","RollbackOutlined","options","reqCategorys","reqAddProduct","PicturesWall","PropTypes","RichTextEditor","Item","TextArea","AddUpdate","constructor","props","state","setOptions","cName1","cName2","getCategorys","parentId","result","data","status","categorys","initOptions","map","c","value","_id","label","name","isLeaf","isUpdate","product","pCategoryId","categoryId","subCategorys","childOptions","targetOption","find","option","children","setState","onChange","selectedOptions","console","log","loadData","length","loading","cOptions","pw","createRef","editor","componentDidMount","UNSAFE_componentWillMount","location","desc","render","title","history","goBack","formItemLayout","labelCol","span","wrapperCol","onFinish","values","imgs","current","getImgs","detail","getDetail","price","categoryIds","success","error","tailLayout","offset","onFinishFailed","errorInfo","push","required","message","minRows","maxRows","validator","_","Promise","resolve","reject","Error","propTypes","array"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, Form, Input, Cascader, Upload, Button, message } from \"antd\";\r\nimport LinkButton from \"../../component/link-button\";\r\nimport { RollbackOutlined } from \"@ant-design/icons\";\r\nimport { options } from \"less\";\r\nimport { reqCategorys,reqAddProduct } from \"../../api\";\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport PropTypes from \"prop-types\";\r\nimport RichTextEditor from \"./rich-text-editor\";\r\n\r\nconst Item = Form.Item;\r\nconst TextArea = Input.TextArea;\r\nexport default class AddUpdate extends Component {\r\n  static propTypes = {\r\n    imgs: PropTypes.array,\r\n  };\r\n  state = {\r\n    options: [],\r\n    setOptions: () => {},\r\n    cName1: \"\",\r\n    cName2: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //创造保存ref标识的标签对象的容器\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategorys(\"0\");\r\n  }\r\n  /* async返回值是新的promise对象,promise结果和值由async的结果 */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId);\r\n    // debugger\r\n    if (result.data.status === 0) {\r\n      const categorys = result.data.data;\r\n      if (parentId === \"0\") {\r\n        this.initOptions(categorys);\r\n      } else {\r\n        return categorys; //返回\r\n      }\r\n      // console.log(categorys)\r\n    }\r\n  };\r\n\r\n  initOptions = async (categorys) => {\r\n    const options = categorys.map((c) => ({\r\n      //注意小括号\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false,\r\n    }));\r\n    //如果是一个二级分类列表\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId, categoryId } = product;\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      //获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId);\r\n      //生成二级下拉列表的options\r\n      const childOptions = subCategorys.map((c) => ({\r\n        //注意小括号,生成二级列表\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n      //关联到对应的一级option\r\n      //找到对应的一级对象\r\n      //   debugger\r\n      const targetOption = options.find(\r\n        (option) => option.value === pCategoryId\r\n      );\r\n      if (targetOption) {\r\n        //如果找到\r\n        targetOption.children = childOptions;\r\n      }\r\n    }\r\n    // console.log(options)\r\n    this.setState({ options });\r\n    // console.log(this.state.options)\r\n  };\r\n  //如何判断是修改还是更新\r\n  UNSAFE_componentWillMount() {\r\n    console.log(this.props.location);\r\n    const product = this.props.location.state.desc;\r\n    //保存是否更新的表示\r\n    this.isUpdate = !!product;\r\n    this.product = product || {};\r\n  }\r\n  onChange = (value, selectedOptions) => {\r\n    console.log(value, selectedOptions);\r\n  };\r\n  /* 用来加载下面数字组 */\r\n  loadData = async (selectedOptions) => {\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    //显示loading\r\n    targetOption.loading = true;\r\n    //   load options lazily\r\n    //获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value);\r\n    // console.log(subCategorys)\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      const cOptions = subCategorys.map((c) => ({\r\n        //注意小括号,生成二级列表\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n      targetOption.children = cOptions;\r\n    } else {\r\n      //当前分类没有二级分类\r\n      targetOption.isLeaf = true;\r\n    }\r\n    targetOption.loading = false;\r\n    this.setState({ options: [...this.state.options] });\r\n  };\r\n  render() {\r\n    const { isUpdate } = this;\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <RollbackOutlined />\r\n        </LinkButton>\r\n        {isUpdate ? \"修改商品\" : \"添加商品\"}\r\n      </span>\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: { span: 3 }, //左侧label宽度\r\n      wrapperCol: { span: 8 }, //右侧包裹输入框宽度\r\n    };\r\n    const onFinish = async (values) => {//调用接口请求函数去添加/更新\r\n      //   console.log(\"Success:\", values);\r\n      const imgs = this.pw.current.getImgs();\r\n      const detail = this.editor.current.getDetail();\r\n      //   console.log('imgs',imgs)\r\n      this.product.name=values.name\r\n      this.product.desc=values.desc\r\n      this.product.price=values.price\r\n      if(values.categoryIds.length>1){\r\n        this.product.pCategoryId=values.categoryIds[0]\r\n        this.product.categoryId=values.categoryIds[1]\r\n      }else{\r\n        this.product.pCategoryId='0'\r\n        this.product.categoryId=values.categoryIds[0]\r\n      }\r\n      \r\n      \r\n      this.product.imgs=imgs\r\n      this.product.detail=detail\r\n    //   console.log(this.product)\r\n      debugger\r\n      const result = await reqAddProduct(this.product)\r\n      console.log(result)\r\n      if(result.data.status===0){\r\n          message.success(`${this.isUpdate?'更新':'添加'}商品成功`)\r\n          this.props.history.goBack()\r\n      }else{\r\n        message.error(`${this.isUpdate?'更新':'添加'}商品失败`)\r\n      }\r\n\r\n    };\r\n    const tailLayout = {\r\n      wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    // function onChange(value) {\r\n    //   console.log(value);\r\n    // }\r\n    const {\r\n      name,\r\n      desc,\r\n      price,\r\n      detail,\r\n      imgs,\r\n      pCategoryId,\r\n      categoryId,\r\n    } = this.product;\r\n    const categoryIds = [];\r\n    if (isUpdate) {\r\n      //   console.log(\"pCategoryId\", pCategoryId);\r\n      if (pCategoryId !== \"0\") {\r\n        categoryIds.push(pCategoryId);\r\n      }\r\n    }\r\n    categoryIds.push(categoryId);\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          {...formItemLayout}\r\n        >\r\n          <Item\r\n            name=\"name\"\r\n            label=\"商品名称\"\r\n            initialValue={name}\r\n            rules={[{ required: true, message: \"必须输入商品名称!\" }]}\r\n          >\r\n            <Input placeholder=\"请输入商品名称\"></Input>\r\n          </Item>\r\n          <Item name=\"desc\" label=\"商品描述\" initialValue={desc}>\r\n            <TextArea\r\n              placeholder=\"请输入商品描述\"\r\n              autoSize={{ minRows: 2, maxRows: 6 }}\r\n            ></TextArea>\r\n          </Item>\r\n          <Item\r\n            name=\"price\"\r\n            label=\"商品价格\"\r\n            initialValue={price}\r\n            rules={[\r\n              { required: true, message: \"必须输入商品价格!\" },\r\n              {\r\n                validator: (_, value) =>\r\n                  !value || value * 1 > 0\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error(\"商品价格必须大于0\")),\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"请输入商品价格\"\r\n              addonAfter=\"元\"\r\n            ></Input>\r\n          </Item>\r\n          <Item\r\n            name=\"categoryIds\"\r\n            label=\"商品类别\"\r\n            rules={[{ required: true, message: \"必须选择商品类别!\" }]}\r\n            initialValue={categoryIds}\r\n          >\r\n            <Cascader\r\n              placeholder=\"请选择\"\r\n              options={this.state.options}\r\n              loadData={this.loadData}\r\n              onChange={this.onChange}\r\n              changeOnSelect\r\n            ></Cascader>\r\n          </Item>\r\n          <Item\r\n            name=\"imgs\"\r\n            label=\"商品图片\"\r\n            initialValue={name}\r\n            rules={[{ required: true, message: \"必须输入商品名称!\" }]}\r\n          >\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Item>\r\n          {/* 输入的是数值,指定type */}\r\n          <Item\r\n            name=\"detail\"\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 3 }}\r\n            wrapperCol= {{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.editor } detail={detail}/>\r\n          </Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n/* 子组件调用父组件的方法:将父组件的方法以函数属性的形式传递给子组件,子组件就可以调用\r\n父组件调用子组件的方法 :在父组件忠通过ref得到子组件标签对象(组件对象),调用其方法*/\r\n"]},"metadata":{},"sourceType":"module"}