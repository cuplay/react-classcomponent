{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"D:\\\\desk\\\\\\u5C1A\\u7845\\u8C37React\\u5168\\u6808\\u9879\\u76EE\\u3010\\u8C37\\u7C92\\u540E\\u53F0\\u3011\\u6559\\u7A0B\\\\React-admin\\\\src\\\\pages\\\\users\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { formateDate } from \"../../utils/dataUtils\";\nimport LinkButton from \"../../component/link-button\";\nimport { reqDelUser, reqUsers, reqAddOrUpdateUser } from \"../../api\";\nimport UserForm from \"./user-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      //所有用户列表\n      showStatus: 0,\n      roles: [],\n      user: {}\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: \"用户名\",\n        dataIndex: \"username\"\n      }, {\n        title: \"邮箱\",\n        dataIndex: \"email\"\n      }, {\n        title: \"电话\",\n        dataIndex: \"phone\"\n      }, {\n        title: \"注册时间\",\n        dataIndex: \"create_time\",\n        render: create_time => formateDate(create_time)\n      }, {\n        title: \"所属角色\",\n        dataIndex: \"role_id\",\n        render: role_id => // {\n        //     const role=this.state.roles.find(role=>role._id===role_id)\n        //     return role?role.name:''}\n        //防止反复生成\n        this.roleNames[role_id]\n      }, {\n        title: \"操作\",\n        render: user => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => this.showUpdate(user),\n            children: \"\\u4FEE\\u6539\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinkButton, {\n            onClick: () => this.deleteUser(user),\n            children: \"\\u5220\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }];\n    };\n\n    this.initRoles = roles => {\n      this.roleNames = roles.reduce((pre, role) => {\n        pre[role._id] = role.name ? role.name : \"\";\n        return pre;\n      }, []);\n    };\n\n    this.deleteUser = user => {\n      _Modal.confirm({\n        title: `确认删除${user.username}吗?`,\n        onOk: async () => {\n          const result = await reqDelUser(user._id);\n\n          if (result.status === 0) {\n            _message.success(\"删除用户成功!\");\n\n            this.getUsers();\n          } else {\n            _message.error(\"删除用户失败!\");\n          }\n        }\n      });\n    };\n\n    this.getUsers = async () => {\n      const result = await reqUsers();\n\n      if (result.status === 0) {\n        const {\n          users,\n          roles\n        } = result.data;\n        this.initRoles(roles); // console.log(roles.find(role=>role._id===\"5ff5ab2fa4aca2121c004675\").name)\n\n        this.setState({\n          users,\n          roles\n        });\n      } else {\n        _message.error(\"获取角色列表失败\");\n      }\n    };\n\n    this.addOrUpdateuser = async () => {\n      //收集数据\n      let user = this.us.current.addOrUpdateUser();\n      user.create_time = Date.now();\n\n      if (this.state.user._id) {\n        user._id = this.state.user._id;\n      } //   2.提交添加的请求\n\n\n      const result = await reqAddOrUpdateUser(user); // 3.更新列表显示\n\n      if (result.status === 0) {\n        _message.success(`${this.state.user._id ? '修改' : '添加'}角色成功`);\n\n        this.getUsers();\n        this.setState({\n          showStatus: 0\n        });\n      } else {\n        _message.error(`${this.state.user._id ? '修改' : '添加'}角色失败`);\n      }\n\n      console.log(user);\n    };\n\n    this.showUpdate = user => {\n      this.state.user = user;\n      this.setState({\n        showStatus: 1\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        showStatus: 0\n      });\n    };\n\n    this.us = /*#__PURE__*/React.createRef();\n  }\n\n  UNSAFE_componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    const {\n      users,\n      showStatus,\n      roles\n    } = this.state;\n    console.log(users);\n\n    const title = /*#__PURE__*/_jsxDEV(_Button, {\n      type: \"primary\",\n      onClick: () => {\n        this.setState({\n          showStatus: 1,\n          user: {}\n        });\n      },\n      children: \"\\u521B\\u5EFA\\u7528\\u6237\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      title: title,\n      children: [/*#__PURE__*/_jsxDEV(_Table, {\n        rowKey: \"_id\",\n        pagination: {\n          pageSize: PAGE_SIZE // , total: 50\n\n        },\n        dataSource: users,\n        columns: this.columns,\n        bordered: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        title: this.state.user._id ? \"修改用户\" : \"添加用户\",\n        visible: showStatus === 1,\n        onOk: this.addOrUpdateuser,\n        onCancel: this.handleCancel,\n        destroyOnClose: true,\n        children: /*#__PURE__*/_jsxDEV(UserForm, {\n          roles: roles,\n          ref: this.us,\n          user: this.state.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/pages/users/index.jsx"],"names":["React","Component","PAGE_SIZE","formateDate","LinkButton","reqDelUser","reqUsers","reqAddOrUpdateUser","UserForm","Users","constructor","props","state","users","showStatus","roles","user","initColumns","columns","title","dataIndex","render","create_time","role_id","roleNames","showUpdate","deleteUser","initRoles","reduce","pre","role","_id","name","confirm","username","onOk","result","status","success","getUsers","error","data","setState","addOrUpdateuser","us","current","addOrUpdateUser","Date","now","console","log","handleCancel","createRef","UNSAFE_componentWillMount","componentDidMount","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Card, Table, Modal, message } from \"antd\";\r\nimport { PAGE_SIZE } from \"../../utils/constant\";\r\nimport { formateDate } from \"../../utils/dataUtils\";\r\nimport LinkButton from \"../../component/link-button\";\r\nimport { reqDelUser, reqUsers, reqAddOrUpdateUser } from \"../../api\";\r\nimport UserForm from \"./user-form\";\r\nexport default class Users extends Component {\r\n  state = {\r\n    users: [], //所有用户列表\r\n    showStatus: 0,\r\n    roles: [],\r\n    user: {},\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.us = React.createRef();\r\n  }\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"用户名\",\r\n        dataIndex: \"username\",\r\n      },\r\n      {\r\n        title: \"邮箱\",\r\n        dataIndex: \"email\",\r\n      },\r\n      {\r\n        title: \"电话\",\r\n        dataIndex: \"phone\",\r\n      },\r\n      {\r\n        title: \"注册时间\",\r\n        dataIndex: \"create_time\",\r\n        render: (create_time) => formateDate(create_time),\r\n      },\r\n      {\r\n        title: \"所属角色\",\r\n        dataIndex: \"role_id\",\r\n        render: (role_id) =>\r\n          // {\r\n          //     const role=this.state.roles.find(role=>role._id===role_id)\r\n          //     return role?role.name:''}\r\n          //防止反复生成\r\n          this.roleNames[role_id],\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n  /* 根据role数据,生成包含所有角色名的对象 */\r\n  initRoles = (roles) => {\r\n    this.roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name ? role.name : \"\";\r\n      return pre;\r\n    }, []);\r\n  };\r\n  /* 删除指定用户 */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n\r\n      onOk: async () => {\r\n        const result = await reqDelUser(user._id);\r\n        if (result.status === 0) {\r\n          message.success(\"删除用户成功!\");\r\n          this.getUsers();\r\n        } else {\r\n          message.error(\"删除用户失败!\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n  /* 获取用户列表 */\r\n  getUsers = async () => {\r\n    const result = await reqUsers();\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data;\r\n      this.initRoles(roles);\r\n      // console.log(roles.find(role=>role._id===\"5ff5ab2fa4aca2121c004675\").name)\r\n      this.setState({ users, roles });\r\n    } else {\r\n      message.error(\"获取角色列表失败\");\r\n    }\r\n  };\r\n  addOrUpdateuser = async () => {\r\n    //收集数据\r\n    let user = this.us.current.addOrUpdateUser();\r\n    user.create_time = Date.now();\r\n    if (this.state.user._id) {\r\n      user._id = this.state.user._id;\r\n    }\r\n    //   2.提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user);\r\n    // 3.更新列表显示\r\n    if (result.status === 0) {\r\n      message.success(`${this.state.user._id?'修改':'添加'}角色成功`);\r\n      this.getUsers();\r\n      this.setState({ showStatus: 0 });\r\n    } else {\r\n      message.error(`${this.state.user._id?'修改':'添加'}角色失败`);\r\n    }\r\n    console.log(user);\r\n  };\r\n  showUpdate = (user) => {\r\n    this.state.user = user;\r\n    this.setState({ showStatus: 1 });\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  handleCancel = () => {\r\n    this.setState({ showStatus: 0 });\r\n  };\r\n  render() {\r\n    const { users, showStatus, roles } = this.state;\r\n    console.log(users);\r\n    const title = (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          this.setState({ showStatus: 1, user: {} });\r\n        }}\r\n      >\r\n        创建用户\r\n      </Button>\r\n    );\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          rowKey=\"_id\"\r\n          pagination={{\r\n            pageSize: PAGE_SIZE,\r\n            // , total: 50\r\n          }}\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          bordered\r\n        />\r\n        <Modal\r\n          title={this.state.user._id ? \"修改用户\" : \"添加用户\"}\r\n          visible={showStatus === 1}\r\n          onOk={this.addOrUpdateuser}\r\n          onCancel={this.handleCancel}\r\n          destroyOnClose={true}\r\n        >\r\n          <UserForm roles={roles} ref={this.us} user={this.state.user} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}