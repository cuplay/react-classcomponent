{"ast":null,"code":"/* 用来根据老的state和指定的action生成并返回新的state函数 */\nimport storageUtils from \"../utils/storageUtils\";\nimport { combineReducers } from 'redux';\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER } from './action-type';\n/* 用来管理头部标题的reducer函数 */\n\nconst initTitle = '首页';\n\nfunction headTitle(state = initTitle, action) {\n  // console.log(SET_HEAD_TITLE)\n  switch (action.type) {\n    case SET_HEAD_TITLE:\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n/* 管理用户名的reducer */\n\n\nconst initUser = storageUtils.getUser();\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case RECEIVE_USER:\n      return action.user;\n\n    case SHOW_ERROR_MSG:\n      const errorMsg = action.errorMsg;\n      return { ...state,\n        errorMsg\n      };\n    //不要直接修改原本的状态数据\n\n    case RESET_USER:\n      return {};\n\n    default:\n      return state;\n  }\n}\n/* \r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构 \r\n{\r\n    headTitle: '首页',\r\n    user:{}\r\n}*/\n\n\nexport default combineReducers({\n  headTitle,\n  user\n});","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/redux/reducer.js"],"names":["storageUtils","combineReducers","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initTitle","headTitle","state","action","type","data","initUser","getUser","user","errorMsg"],"mappings":"AAAA;AAEA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,SAAQC,cAAR,EAAuBC,YAAvB,EAAoCC,cAApC,EAAmDC,UAAnD,QAAoE,eAApE;AACA;;AACA,MAAMC,SAAS,GAAC,IAAhB;;AACA,SAASC,SAAT,CAAmBC,KAAK,GAACF,SAAzB,EAAmCG,MAAnC,EAA0C;AACtC;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,cAAL;AACI,aAAOO,MAAM,CAACE,IAAd;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH;AAED;;;AACA,MAAMI,QAAQ,GAACZ,YAAY,CAACa,OAAb,EAAf;;AACA,SAASC,IAAT,CAAcN,KAAK,GAACI,QAApB,EAA6BH,MAA7B,EAAoC;AAChC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,YAAL;AACI,aAAOM,MAAM,CAACK,IAAd;;AACJ,SAAKV,cAAL;AACI,YAAMW,QAAQ,GAAGN,MAAM,CAACM,QAAxB;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAUO,QAAAA;AAAV,OAAP;AAA2B;;AAC/B,SAAKV,UAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOG,KAAP;AATR;AAWH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeP,eAAe,CAAC;AAC3BM,EAAAA,SAD2B;AAE3BO,EAAAA;AAF2B,CAAD,CAA9B","sourcesContent":["/* 用来根据老的state和指定的action生成并返回新的state函数 */\r\n\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {combineReducers} from 'redux'\r\nimport {SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER} from './action-type'\r\n/* 用来管理头部标题的reducer函数 */\r\nconst initTitle='首页'\r\nfunction headTitle(state=initTitle,action){\r\n    // console.log(SET_HEAD_TITLE)\r\n    switch(action.type){\r\n        case SET_HEAD_TITLE:\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/* 管理用户名的reducer */\r\nconst initUser=storageUtils.getUser()\r\nfunction user(state=initUser,action){\r\n    switch(action.type){\r\n        case RECEIVE_USER:\r\n            return action.user\r\n        case SHOW_ERROR_MSG:\r\n            const errorMsg = action.errorMsg\r\n            return {...state,errorMsg} //不要直接修改原本的状态数据\r\n        case RESET_USER:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/* \r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构 \r\n{\r\n    headTitle: '首页',\r\n    user:{}\r\n}*/\r\n\r\nexport default combineReducers({\r\n    headTitle,\r\n    user\r\n})"]},"metadata":{},"sourceType":"module"}