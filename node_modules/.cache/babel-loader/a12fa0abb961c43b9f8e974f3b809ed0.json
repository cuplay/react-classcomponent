{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"D:\\\\desk\\\\\\u5C1A\\u7845\\u8C37React\\u5168\\u6808\\u9879\\u76EE\\u3010\\u8C37\\u7C92\\u540E\\u53F0\\u3011\\u6559\\u7A0B\\\\React-admin\\\\src\\\\component\\\\loginform\\\\index.jsx\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport React, { Component } from \"react\";\nimport './index.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      console.log('Received values of form: ', values); // \n    };\n\n    this.onFinishFailed = (values, errorFields, outOfDate) => {\n      console.log(values, errorFields, outOfDate);\n    };\n\n    this.validatePwd = (rule, value, callback) => {\n      // console.log(value)\n      if (!value) {\n        callback('密码必须输入');\n      } else if (value.length < 4) {\n        callback('密码不能小于4');\n      } else if (value.length > 12) {\n        callback('密码不能大于12');\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback('密码必须由大小写字母或者数字组成');\n      } else {\n        callback(); //验证通过\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Form, {\n      name: \"normal_login\",\n      className: \"login-form\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: \"请输入用户名!\"\n        }, {\n          min: 3,\n          message: \"最小5位\"\n        }, {\n          max: 15,\n          message: \"最大10位\"\n        }, {\n          pattern: /^[a-zA-Z0-9_]+$/,\n          message: \"必须是英文,数字或下划线组成\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input, {\n          prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: \"请输入密码!\"\n        }, {\n          validator: this.validatePwd\n        }],\n        children: /*#__PURE__*/_jsxDEV(_Input, {\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n            className: \"site-form-item-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this),\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(_Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"login-form-button\",\n          children: \"\\u767B\\u9678\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/component/loginform/index.jsx"],"names":["UserOutlined","LockOutlined","React","Component","LoginForm","onFinish","values","console","log","onFinishFailed","errorFields","outOfDate","validatePwd","rule","value","callback","length","test","render","remember","required","message","min","max","pattern","validator"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport './index.less'\r\nexport default class LoginForm extends Component {\r\n  onFinish = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    // \r\n\r\n  };\r\n  onFinishFailed=(values, errorFields, outOfDate)=>{\r\n    console.log(values, errorFields, outOfDate)\r\n  }\r\n  validatePwd=(rule,value,callback)=>{\r\n    // console.log(value)\r\n    if(!value){\r\n      callback('密码必须输入')\r\n    }else if(value.length<4){\r\n      callback('密码不能小于4')\r\n    }else if(value.length>12){\r\n      callback('密码不能大于12')\r\n    }else if(!/^[a-zA-Z0-9_]+$/.test(value)){\r\n      callback('密码必须由大小写字母或者数字组成')\r\n    }else{\r\n      callback()//验证通过\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={this.onFinish}\r\n        onFinishFailed={this.onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"请输入用户名!\",\r\n            },\r\n            {\r\n                 min:3,\r\n                 message: \"最小5位\",    \r\n              },                    \r\n            {\r\n                max:15,\r\n                message: \"最大10位\",    \r\n             },\r\n            {\r\n                pattern:/^[a-zA-Z0-9_]+$/,\r\n                message: \"必须是英文,数字或下划线组成\",    \r\n             },\r\n\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"请输入密码!\",\r\n            },\r\n            {\r\n              validator:this.validatePwd,\r\n             },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Item>\r\n        {/* <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item> */}\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            登陸\r\n          </Button>\r\n          {/* Or <a href=\"\">register now!</a> */}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}