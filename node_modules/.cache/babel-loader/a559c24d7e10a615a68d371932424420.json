{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\\\u524D\\u7AEF\\u5B9E\\u6218\\\\react_extension\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Demo from \"./component/optimize/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.add = () => {\n      //对象式的setState\n      // //获取原来count\n      // const {count} = this.state\n      // //异步调用\n      // this.setState({count:count+1},()=>{\n      //   console.log('回调函数',this.state.count);\n      // })\n      // console.log(this.state.count);\n      //函数式,依赖于原状态的推荐使用\n      this.setState((state, props) => {\n        return {\n          count: state.count + 1\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/桌面/前端实战/react_extension/src/App.js"],"names":["React","Component","Demo","App","state","count","add","setState","props","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AACA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADiC;;AAAA,SAEzCC,GAFyC,GAEnC,MAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,WAAKC,QAAL,CAAc,CAACH,KAAD,EAAQI,KAAR,KAAkB;AAC9B,eAAO;AAAEH,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAvB,SAAP;AACD,OAFD;AAGD,KAhBwC;AAAA;;AAiBzCI,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AArBwC","sourcesContent":["import React, { Component } from \"react\";\nimport Demo from \"./component/optimize/\";\nexport default class App extends Component {\n  state = { count: 0 };\n  add = () => {\n    //对象式的setState\n    // //获取原来count\n    // const {count} = this.state\n    // //异步调用\n    // this.setState({count:count+1},()=>{\n    //   console.log('回调函数',this.state.count);\n    // })\n    // console.log(this.state.count);\n\n    //函数式,依赖于原状态的推荐使用\n    this.setState((state, props) => {\n      return { count: state.count + 1 };\n    });\n  };\n  render() {\n    return (\n        <Demo/>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}