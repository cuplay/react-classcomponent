{"ast":null,"code":"var _jsxFileName = \"D:\\\\desk\\\\\\u5C1A\\u7845\\u8C37React\\u5168\\u6808\\u9879\\u76EE\\u3010\\u8C37\\u7C92\\u540E\\u53F0\\u3011\\u6559\\u7A0B\\\\React-admin\\\\src\\\\pages\\\\home\\\\line.js\";\nimport React from \"react\";\nimport { Chart, Geom, Axis, Tooltip, Legend } from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Line extends React.Component {\n  render() {\n    const data = [{\n      month: \"Jan\",\n      a: 7.0,\n      b: 3.9,\n      c: 5.9\n    }, {\n      month: \"Feb\",\n      a: 6.9,\n      b: 4.2,\n      c: 1.9\n    }, {\n      month: \"Mar\",\n      a: 9.5,\n      b: 5.7,\n      c: 3.9\n    }, {\n      month: \"Apr\",\n      a: 14.5,\n      b: 8.5,\n      c: 5.5\n    }, {\n      month: \"May\",\n      a: 18.4,\n      b: 11.9,\n      c: 8.9\n    }, {\n      month: \"Jun\",\n      a: 21.5,\n      b: 15.2,\n      c: 10.0\n    }, {\n      month: \"Jul\",\n      a: 25.2,\n      b: 17.0,\n      c: 12.9\n    }, {\n      month: \"Aug\",\n      a: 26.5,\n      b: 16.6,\n      c: 15.9\n    }, {\n      month: \"Sep\",\n      a: 23.3,\n      b: 14.2,\n      c: 20.7\n    }, {\n      month: \"Oct\",\n      a: 18.3,\n      b: 10.3,\n      c: 25.9\n    }, {\n      month: \"Nov\",\n      a: 13.9,\n      b: 6.6,\n      c: 30.9\n    }, {\n      month: \"Dec\",\n      a: 9.6,\n      b: 4.8,\n      c: 35.9\n    }];\n    const ds = new DataSet();\n    const dv = ds.createView().source(data);\n    dv.transform({\n      type: \"fold\",\n      fields: [\"a\", \"b\", \"c\"],\n      // 展开字段集\n      key: \"city\",\n      // key 字段\n      value: \"temperature\" // value 字段\n\n    });\n    const cols = {\n      month: {\n        range: [0, 1]\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: \"right\",\n        width: 750,\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        height: 250,\n        data: dv,\n        scale: cols,\n        forceFit: true,\n        children: [/*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Axis, {\n          name: \"month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Axis, {\n          name: \"temperature\",\n          label: {\n            formatter: val => `${val}万个`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          crosshairs: {\n            type: \"y\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Geom, {\n          type: \"line\",\n          position: \"month*temperature\",\n          size: 2,\n          color: \"city\",\n          shape: \"smooth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Geom, {\n          type: \"point\",\n          position: \"month*temperature\",\n          size: 4,\n          shape: \"circle\",\n          color: \"city\",\n          style: {\n            stroke: \"#fff\",\n            lineWidth: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/pages/home/line.js"],"names":["React","Chart","Geom","Axis","Tooltip","Legend","DataSet","Line","Component","render","data","month","a","b","c","ds","dv","createView","source","transform","type","fields","key","value","cols","range","float","width","height","formatter","val","stroke","lineWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,MAArC,QAAmD,WAAnD;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AACA,eAAe,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAChDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,CACX;AACEC,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,GAFL;AAGEC,MAAAA,CAAC,EAAE,GAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KADW,EAOX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,GAFL;AAGEC,MAAAA,CAAC,EAAE,GAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KAPW,EAaX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,GAFL;AAGEC,MAAAA,CAAC,EAAE,GAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KAbW,EAmBX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,GAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KAnBW,EAyBX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,IAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KAzBW,EA+BX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,IAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KA/BW,EAqCX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,IAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KArCW,EA2CX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,IAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KA3CW,EAiDX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,IAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KAjDW,EAuDX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,IAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KAvDW,EA6DX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,IAFL;AAGEC,MAAAA,CAAC,EAAE,GAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KA7DW,EAmEX;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,CAAC,EAAE,GAFL;AAGEC,MAAAA,CAAC,EAAE,GAHL;AAIEC,MAAAA,CAAC,EAAE;AAJL,KAnEW,CAAb;AA0EA,UAAMC,EAAE,GAAG,IAAIT,OAAJ,EAAX;AACA,UAAMU,EAAE,GAAGD,EAAE,CAACE,UAAH,GAAgBC,MAAhB,CAAuBR,IAAvB,CAAX;AACAM,IAAAA,EAAE,CAACG,SAAH,CAAa;AACXC,MAAAA,IAAI,EAAE,MADK;AAEXC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFG;AAGX;AACAC,MAAAA,GAAG,EAAE,MAJM;AAKX;AACAC,MAAAA,KAAK,EAAE,aANI,CAMW;;AANX,KAAb;AAQA,UAAMC,IAAI,GAAG;AACXb,MAAAA,KAAK,EAAE;AACLc,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ;AADF;AADI,KAAb;AAKA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE,GAAzB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAAZ;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,GAAf;AAAoB,QAAA,IAAI,EAAEZ,EAA1B;AAA8B,QAAA,KAAK,EAAEQ,IAArC;AAA2C,QAAA,QAAQ,MAAnD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,KAAK,EAAE;AACLK,YAAAA,SAAS,EAAGC,GAAD,IAAU,GAAEA,GAAI;AADtB;AAFT;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE,QAAC,OAAD;AACE,UAAA,UAAU,EAAE;AACVV,YAAAA,IAAI,EAAE;AADI;AADd;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE,QAAC,IAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAC,mBAFX;AAGE,UAAA,IAAI,EAAE,CAHR;AAIE,UAAA,KAAK,EAAE,MAJT;AAKE,UAAA,KAAK,EAAE;AALT;AAAA;AAAA;AAAA;AAAA,gBAdF,eAqBE,QAAC,IAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,QAAQ,EAAC,mBAFX;AAGE,UAAA,IAAI,EAAE,CAHR;AAIE,UAAA,KAAK,EAAE,QAJT;AAKE,UAAA,KAAK,EAAE,MALT;AAME,UAAA,KAAK,EAAE;AACLW,YAAAA,MAAM,EAAE,MADH;AAELC,YAAAA,SAAS,EAAE;AAFN;AANT;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;;AAhI+C","sourcesContent":["import React from \"react\";\r\nimport { Chart, Geom, Axis, Tooltip, Legend } from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9,\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9,\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9,\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5,\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9,\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0,\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9,\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9,\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7,\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9,\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9,\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9,\r\n      },\r\n    ];\r\n    const ds = new DataSet();\r\n    const dv = ds.createView().source(data);\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key 字段\r\n      value: \"temperature\", // value 字段\r\n    });\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1],\r\n      },\r\n    };\r\n    return (\r\n      <div style={{ float: \"right\", width: 750, height: 300 }}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend />\r\n          <Axis name=\"month\" />\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: (val) => `${val}万个`,\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\",\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1,\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}