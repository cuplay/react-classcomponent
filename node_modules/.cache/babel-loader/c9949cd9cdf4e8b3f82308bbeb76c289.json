{"ast":null,"code":"/* 包含n个action creator函数的模块\r\n同步action:对象{type:xxx,date:数据} \r\n异步action:函数 dispatch=>{}*/\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG } from './action-type';\nimport { reqLogin } from '../api';\nimport { memoryUtils } from '../utils/memoryUtils';\nimport { storageUtils } from '../utils/storageUtils';\n/* 设置头部标题的同步action */\n\nexport const setHeadTitle = headTitle => ({\n  type: SET_HEAD_TITLE,\n  data: headTitle\n});\nexport const receiveUser = user => ({\n  type: RECEIVE_USER,\n  user\n});\nexport const showErrorMsg = errorMsg => ({\n  type: SHOW_ERROR_MSG,\n  errorMsg\n});\n/*  \r\n登陆的异步 action\r\n*/\n\nexport const login = (username, password) => async dispatch => {\n  //执行异步请求\n  const result = await reqLogin(username, password); //如果成功，分发成功的同步action\n\n  if (result.status === 0) {\n    const user = result.data;\n    memoryUtils.user = user;\n    storageUtils.saveUser(user);\n    dispatch(receiveUser(user)); //登陆成功\n  } else {\n    //如果失败，分发成功的同步action\n    const msg = result.msg;\n    dispatch(showErrorMsg(msg));\n  }\n};","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/redux/actions.js"],"names":["SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","reqLogin","memoryUtils","storageUtils","setHeadTitle","headTitle","type","data","receiveUser","user","showErrorMsg","errorMsg","login","username","password","dispatch","result","status","saveUser","msg"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,cAAR,EAAuBC,YAAvB,EAAoCC,cAApC,QAAyD,eAAzD;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AACA;;AACA,OAAO,MAAMC,YAAY,GAAIC,SAAD,KAAe;AAACC,EAAAA,IAAI,EAACR,cAAN;AAAqBS,EAAAA,IAAI,EAACF;AAA1B,CAAf,CAArB;AAEP,OAAO,MAAMG,WAAW,GAAIC,IAAD,KAAU;AAACH,EAAAA,IAAI,EAACP,YAAN;AAAmBU,EAAAA;AAAnB,CAAV,CAApB;AAEP,OAAO,MAAMC,YAAY,GAAIC,QAAD,KAAc;AAACL,EAAAA,IAAI,EAACN,cAAN;AAAqBW,EAAAA;AAArB,CAAd,CAArB;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAuB,MAAMC,QAAN,IAAgB;AACxD;AACA,QAAMC,MAAM,GAAG,MAAMf,QAAQ,CAACY,QAAD,EAAUC,QAAV,CAA7B,CAFwD,CAGxD;;AACA,MAAIE,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AAErB,UAAMR,IAAI,GAAGO,MAAM,CAACT,IAApB;AACAL,IAAAA,WAAW,CAACO,IAAZ,GAAmBA,IAAnB;AACAN,IAAAA,YAAY,CAACe,QAAb,CAAsBT,IAAtB;AACAM,IAAAA,QAAQ,CAACP,WAAW,CAACC,IAAD,CAAZ,CAAR,CALqB,CAMrB;AACD,GAPH,MAOS;AACL;AACA,UAAMU,GAAG,GAACH,MAAM,CAACG,GAAjB;AACAJ,IAAAA,QAAQ,CAACL,YAAY,CAACS,GAAD,CAAb,CAAR;AACD;AAEN,CAjBM","sourcesContent":["/* 包含n个action creator函数的模块\r\n同步action:对象{type:xxx,date:数据} \r\n异步action:函数 dispatch=>{}*/\r\nimport {SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG} from './action-type'\r\nimport {reqLogin} from '../api'\r\nimport {memoryUtils} from '../utils/memoryUtils'\r\nimport {storageUtils} from '../utils/storageUtils'\r\n/* 设置头部标题的同步action */\r\nexport const setHeadTitle = (headTitle) =>({type:SET_HEAD_TITLE,data:headTitle})\r\n\r\nexport const receiveUser = (user) =>({type:RECEIVE_USER,user})\r\n\r\nexport const showErrorMsg = (errorMsg) =>({type:SHOW_ERROR_MSG,errorMsg})\r\n\r\n/*  \r\n登陆的异步 action\r\n*/\r\nexport const login = (username,password) => async dispatch=>{\r\n    //执行异步请求\r\n    const result = await reqLogin(username,password)\r\n    //如果成功，分发成功的同步action\r\n    if (result.status === 0) {\r\n\r\n        const user = result.data \r\n        memoryUtils.user = user;\r\n        storageUtils.saveUser(user);\r\n        dispatch(receiveUser(user))\r\n        //登陆成功\r\n      } else {\r\n        //如果失败，分发成功的同步action\r\n        const msg=result.msg\r\n        dispatch(showErrorMsg(msg))\r\n      }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}