{"ast":null,"code":"var _jsxFileName = \"D:\\\\desk\\\\\\u5C1A\\u7845\\u8C37React\\u5168\\u6808\\u9879\\u76EE\\u3010\\u8C37\\u7C92\\u540E\\u53F0\\u3011\\u6559\\u7A0B\\\\React-admin\\\\src\\\\pages\\\\product\\\\rich-text-editor.jsx\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RichTextEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty() //创建了空的编辑对象\n\n    };\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    this.getDetail = () => {\n      const {\n        editorState\n      } = this.state;\n      return draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    };\n\n    const {\n      detail\n    } = this.props;\n    const contentBlock = htmlToDraft(detail);\n\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    }\n  }\n\n  //   UNSAFE_componentWillMount(){\n  //     editorState.\n  //   }\n  render() {\n    const {\n      editorState\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState,\n        wrapperClassName: \"demo-wrapper\",\n        editorClassName: \"demo-editor\",\n        editorStyle: {\n          border: '1px solid black',\n          minHeight: 200,\n          paddingLeft: 10\n        },\n        onEditorStateChange: this.onEditorStateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nRichTextEditor.propTypes = {\n  detail: PropTypes.string\n};","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/pages/product/rich-text-editor.jsx"],"names":["React","Component","EditorState","convertToRaw","Editor","draftToHtml","htmlToDraft","PropTypes","RichTextEditor","constructor","props","state","editorState","createEmpty","onEditorStateChange","setState","getDetail","getCurrentContent","detail","contentBlock","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","render","border","minHeight","paddingLeft","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,kDAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAOpDQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAHnBC,KAGmB,GAHX;AACNC,MAAAA,WAAW,EAAEV,WAAW,CAACW,WAAZ,EADP,CACiC;;AADjC,KAGW;;AAAA,SAanBC,mBAbmB,GAaGF,WAAD,IAAiB;AACpC,WAAKG,QAAL,CAAc;AACZH,QAAAA;AADY,OAAd;AAGD,KAjBkB;;AAAA,SAkBnBI,SAlBmB,GAkBR,MAAI;AACb,YAAM;AAAEJ,QAAAA;AAAF,UAAkB,KAAKD,KAA7B;AACE,aAAON,WAAW,CAACF,YAAY,CAACS,WAAW,CAACK,iBAAZ,EAAD,CAAb,CAAlB;AACH,KArBkB;;AAEjB,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKR,KAAtB;AACA,UAAMS,YAAY,GAAGb,WAAW,CAACY,MAAD,CAAhC;;AACA,QAAIC,YAAJ,EAAkB;AAChB,YAAMC,YAAY,GAAGC,YAAY,CAACC,oBAAb,CAAkCH,YAAY,CAACI,aAA/C,CAArB;AACA,YAAMX,WAAW,GAAGV,WAAW,CAACsB,iBAAZ,CAA8BJ,YAA9B,CAApB;AACA,WAAKT,KAAL,GAAa;AACXC,QAAAA;AADW,OAAb;AAGD;AACF;;AAWH;AACA;AACA;AACEa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,wBACE;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,WAAW,EAAEC,WADf;AAEE,QAAA,gBAAgB,EAAC,cAFnB;AAGE,QAAA,eAAe,EAAC,aAHlB;AAIE,QAAA,WAAW,EAAE;AAACc,UAAAA,MAAM,EAAC,iBAAR;AAA0BC,UAAAA,SAAS,EAAC,GAApC;AAAwCC,UAAAA,WAAW,EAAC;AAApD,SAJf;AAKE,QAAA,mBAAmB,EAAE,KAAKd;AAL5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAjDmD;AAAjCN,c,CACVqB,S,GAAU;AACbX,EAAAA,MAAM,EAACX,SAAS,CAACuB;AADJ,C","sourcesContent":["import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class RichTextEditor extends Component {\r\n    static propTypes={\r\n        detail:PropTypes.string\r\n    }\r\n  state = {\r\n    editorState: EditorState.createEmpty(),//创建了空的编辑对象\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    const {detail} = this.props;\r\n    const contentBlock = htmlToDraft(detail);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        editorState,\r\n      };\r\n    }\r\n  }\r\n\r\n  onEditorStateChange= (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n  getDetail= ()=>{\r\n    const { editorState } = this.state;\r\n      return draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n  }\r\n//   UNSAFE_componentWillMount(){\r\n//     editorState.\r\n//   }\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          editorStyle={{border:'1px solid black',minHeight:200,paddingLeft:10}}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}