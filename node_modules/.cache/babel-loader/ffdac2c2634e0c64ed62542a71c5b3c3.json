{"ast":null,"code":"/* 包含n个action creator函数的模块\r\n同步action:对象{type:xxx,date:数据} \r\n异步action:函数 dispatch=>{}*/\nimport { SET_HEAD_TITLE, RECEIVE_USER } from './action-type';\nimport { reqLogin } from '../api';\n\n/* 设置头部标题的同步action */\nexport const setHeadTitle = headTitle => ({\n  type: SET_HEAD_TITLE,\n  data: headTitle\n});\nexport const receiveUser = user => ({\n  type: RECEIVE_USER,\n  data: user\n});\n/*  \r\n登陆的异步 action\r\n*/\n\nexport const login = (username, password) => async dispatch => {\n  //执行异步请求\n  const result = await reqLogin(username, password); //如果成功，分发成功的同步action\n\n  if (result.status === 0) {\n    const user = result.data;\n    dispatch(receiveUser(user)); //登陆成功\n  } else {//如果失败，分发成功的同步action\n    }\n};","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/redux/actions.js"],"names":["SET_HEAD_TITLE","RECEIVE_USER","reqLogin","setHeadTitle","headTitle","type","data","receiveUser","user","login","username","password","dispatch","result","status"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,cAAR,EAAuBC,YAAvB,QAA0C,eAA1C;AACA,SAAQC,QAAR,QAAuB,QAAvB;;AAEA;AACA,OAAO,MAAMC,YAAY,GAAIC,SAAD,KAAe;AAACC,EAAAA,IAAI,EAACL,cAAN;AAAqBM,EAAAA,IAAI,EAACF;AAA1B,CAAf,CAArB;AAEP,OAAO,MAAMG,WAAW,GAAIC,IAAD,KAAU;AAACH,EAAAA,IAAI,EAACJ,YAAN;AAAmBK,EAAAA,IAAI,EAACE;AAAxB,CAAV,CAApB;AACP;AACA;AACA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAuB,MAAMC,QAAN,IAAgB;AACxD;AACA,QAAMC,MAAM,GAAG,MAAMX,QAAQ,CAACQ,QAAD,EAAUC,QAAV,CAA7B,CAFwD,CAGxD;;AACA,MAAIE,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACrB,UAAMN,IAAI,GAAGK,MAAM,CAACP,IAApB;AACAM,IAAAA,QAAQ,CAACL,WAAW,CAACC,IAAD,CAAZ,CAAR,CAFqB,CAGrB;AACD,GAJH,MAIS,CACL;AAED;AAEN,CAbM","sourcesContent":["/* 包含n个action creator函数的模块\r\n同步action:对象{type:xxx,date:数据} \r\n异步action:函数 dispatch=>{}*/\r\nimport {SET_HEAD_TITLE,RECEIVE_USER} from './action-type'\r\nimport {reqLogin} from '../api'\r\nimport { Result } from 'antd'\r\n/* 设置头部标题的同步action */\r\nexport const setHeadTitle = (headTitle) =>({type:SET_HEAD_TITLE,data:headTitle})\r\n\r\nexport const receiveUser = (user) =>({type:RECEIVE_USER,data:user})\r\n/*  \r\n登陆的异步 action\r\n*/\r\nexport const login = (username,password) => async dispatch=>{\r\n    //执行异步请求\r\n    const result = await reqLogin(username,password)\r\n    //如果成功，分发成功的同步action\r\n    if (result.status === 0) {\r\n        const user = result.data \r\n        dispatch(receiveUser(user))\r\n        //登陆成功\r\n      } else {\r\n        //如果失败，分发成功的同步action\r\n\r\n      }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}