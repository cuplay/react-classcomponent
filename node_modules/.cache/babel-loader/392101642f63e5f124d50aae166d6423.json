{"ast":null,"code":"var _jsxFileName = \"D:\\\\desk\\\\\\u5C1A\\u7845\\u8C37React\\u5168\\u6808\\u9879\\u76EE\\u3010\\u8C37\\u7C92\\u540E\\u53F0\\u3011\\u6559\\u7A0B\\\\React-admin\\\\src\\\\pages\\\\product\\\\rich-text-editor.jsx\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RichTextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadImageCallBack = file => {\n      return new Promise((resolve, reject) => {\n        let formData = new FormData();\n        formData.append('file', file);\n        let subsystemTourInfo = JSON.parse(localStorage.getItem('subsystemTourInfo')) || {};\n        fetch(`http://120.55.193.14:5000//manage/img/upload`, {\n          method: 'POST',\n          headers: {\n            'store-user-token': subsystemTourInfo.token\n          },\n          body: formData\n        }).then(res => {\n          return res.json();\n        }).then(res => {\n          if (res.err !== 0) {\n            message.error('图片上传失败', 2);\n            reject(res);\n          } else {\n            resolve({\n              data: {\n                link: res.fileId\n              }\n            });\n          }\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    };\n\n    this.state = {\n      editorState: EditorState.createEmpty() //创建了空的编辑对象\n\n    };\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    this.getDetail = () => {\n      const {\n        editorState\n      } = this.state;\n      return draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    };\n\n    const {\n      detail\n    } = this.props;\n    const contentBlock = htmlToDraft(detail);\n\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    }\n  }\n\n  //   UNSAFE_componentWillMount(){\n  //     editorState.\n  //   }\n  render() {\n    const {\n      editorState\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState,\n        wrapperClassName: \"demo-wrapper\",\n        editorClassName: \"demo-editor\",\n        editorStyle: {\n          border: '1px solid black',\n          minHeight: 200,\n          paddingLeft: 10\n        },\n        onEditorStateChange: this.onEditorStateChange,\n        toolbar: {\n          inline: {\n            inDropdown: true\n          },\n          list: {\n            inDropdown: true\n          },\n          textAlign: {\n            inDropdown: true\n          },\n          link: {\n            inDropdown: true\n          },\n          history: {\n            inDropdown: true\n          },\n          image: {\n            uploadCallback: this.uploadImageCallBack,\n            alt: {\n              present: true,\n              mandatory: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nRichTextEditor.propTypes = {\n  detail: PropTypes.string\n};","map":{"version":3,"sources":["D:/desk/尚硅谷React全栈项目【谷粒后台】教程/React-admin/src/pages/product/rich-text-editor.jsx"],"names":["React","Component","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","PropTypes","RichTextEditor","constructor","props","uploadImageCallBack","file","Promise","resolve","reject","formData","FormData","append","subsystemTourInfo","JSON","parse","localStorage","getItem","fetch","method","headers","token","body","then","res","json","err","message","error","data","link","fileId","catch","state","editorState","createEmpty","onEditorStateChange","setState","getDetail","getCurrentContent","detail","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","render","border","minHeight","paddingLeft","inline","inDropdown","list","textAlign","history","image","uploadCallback","alt","present","mandatory","propTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { EditorState, convertToRaw,ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class RichTextEditor extends Component {\r\n    static propTypes={\r\n        detail:PropTypes.string\r\n    }\r\n    uploadImageCallBack=(file)=>{\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n            let subsystemTourInfo = JSON.parse(localStorage.getItem('subsystemTourInfo')) || {}\r\n            fetch(`http://120.55.193.14:5000//manage/img/upload`, {\r\n              method: 'POST',\r\n              headers: {\r\n              'store-user-token':subsystemTourInfo.token\r\n              },\r\n              body: formData,\r\n            }).then(res => {\r\n              return res.json()\r\n            }).then(res => {\r\n              if (res.err !== 0) {\r\n                message.error('图片上传失败', 2)\r\n                reject(res)\r\n              } else {\r\n                resolve({data: {link: res.fileId}})\r\n              }\r\n      \r\n            }).catch(err => {\r\n              reject(err)\r\n            })\r\n          }\r\n        )\r\n      }\r\n  state = {\r\n    editorState: EditorState.createEmpty(),//创建了空的编辑对象\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    const {detail} = this.props\r\n    const contentBlock = htmlToDraft(detail)\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    }\r\n  }\r\n\r\n  onEditorStateChange= (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n  getDetail= ()=>{\r\n    const { editorState } = this.state\r\n      return draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n  }\r\n//   UNSAFE_componentWillMount(){\r\n//     editorState.\r\n//   }\r\n  render() {\r\n    const { editorState } = this.state\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          editorStyle={{border:'1px solid black',minHeight:200,paddingLeft:10}}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            inline: { inDropdown: true },\r\n            list: { inDropdown: true },\r\n            textAlign: { inDropdown: true },\r\n            link: { inDropdown: true },\r\n            history: { inDropdown: true },\r\n            image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}