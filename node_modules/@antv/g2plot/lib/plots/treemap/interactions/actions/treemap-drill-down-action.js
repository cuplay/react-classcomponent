"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TreemapDrillDownAction = void 0;
var tslib_1 = require("tslib");
var g2_1 = require("@antv/g2");
var util_1 = require("@antv/util");
var utils_1 = require("../../utils");
var TreemapDrillDownAction = /** @class */ (function (_super) {
    tslib_1.__extends(TreemapDrillDownAction, _super);
    function TreemapDrillDownAction() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // 存储历史下钻 scale
        _this.cacheDataStack = [];
        return _this;
    }
    TreemapDrillDownAction.prototype.drill = function (data) {
        var view = this.context.view;
        var currentData = view.getData();
        var groupScales = view.getGroupScales();
        var hierarchyConfig = util_1.get(view, ['interactions', 'treemap-drill-down', 'cfg', 'hierarchyConfig'], {});
        // 重新 update 数据
        var drillData = utils_1.transformData({
            data: data,
            colorField: util_1.get(groupScales, [0, 'field']),
            openDrillDown: true,
            hierarchyConfig: hierarchyConfig,
        });
        view.changeData(drillData);
        this.cacheDataStack.push(currentData);
    };
    TreemapDrillDownAction.prototype.click = function () {
        var data = util_1.get(this.context, ['event', 'data', 'data']);
        if (!data)
            return false;
        this.drill(data);
    };
    TreemapDrillDownAction.prototype.reset = function () {
        var view = this.context.view;
        if (!util_1.isArray(this.cacheDataStack) || this.cacheDataStack.length <= 0) {
            return;
        }
        var cacheData = this.cacheDataStack.splice(this.cacheDataStack.length - 1, 1);
        view.changeData(cacheData[0]);
    };
    return TreemapDrillDownAction;
}(g2_1.Action));
exports.TreemapDrillDownAction = TreemapDrillDownAction;
//# sourceMappingURL=treemap-drill-down-action.js.map