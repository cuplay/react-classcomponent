{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/pie/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, isString, isNil, get, isArray, isNumber } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { legend, interaction, animation, theme, state, annotation } from '../../adaptor/common';\nimport { getMappingFunction } from '../../adaptor/geometries/base';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, template, transformLabel, deepAssign, renderStatistic } from '../../utils';\nimport { DEFAULT_OPTIONS } from './contants';\nimport { adaptOffset, getTotalValue, processIllegalData, isAllZero } from './utils';\nimport { PieOptions } from './types';\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { data, angleField, colorField, color, pieStyle } = options;\n\n  // 处理不合法的数据\n  let processData = processIllegalData(data, angleField);\n\n  if (isAllZero(processData, angleField)) {\n    // 数据全 0 处理，调整 position 映射\n    const percentageField = '$$percentage$$';\n    processData = processData.map((d) => ({ ...d, [percentageField]: 1 / processData.length }));\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: percentageField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n        },\n      },\n    });\n\n    interval(p);\n  } else {\n    chart.data(processData);\n\n    const p = deepAssign({}, params, {\n      options: {\n        xField: '1',\n        yField: angleField,\n        seriesField: colorField,\n        isStack: true,\n        interval: {\n          color,\n          style: pieStyle,\n        },\n        args: {\n          zIndexReversed: true,\n        },\n      },\n    });\n\n    interval(p);\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { meta, colorField } = options;\n\n  // meta 直接是 scale 的信息\n  const scales = deepAssign({}, meta);\n  chart.scale(scales, {\n    [colorField]: { type: 'cat' },\n  });\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius, startAngle, endAngle } = options;\n\n  chart.coordinate({\n    type: 'theta',\n    cfg: {\n      radius,\n      innerRadius,\n      startAngle,\n      endAngle,\n    },\n  });\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { label, colorField, angleField } = options;\n\n  const geometry = chart.geometries[0];\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    const labelCfg = transformLabel(cfg);\n\n    // ① 提供模板字符串的 label content 配置\n    if (labelCfg.content) {\n      const { content } = labelCfg;\n      labelCfg.content = (data: object, dataum: any, index: number) => {\n        const name = data[colorField];\n        const value = data[angleField];\n        // dymatic get scale, scale is ready this time\n        const angleScale = chart.getScaleByField(angleField);\n        const percent = angleScale?.scale(value);\n        return isFunction(content)\n          ? // append pecent (number) to data, users can get origin data from `dataum._origin`\n            content({ ...data, percent }, dataum, index)\n          : isString(content)\n          ? template(content as string, {\n              value,\n              name,\n              // percentage (string), default keep 2\n              percentage: isNumber(percent) && !isNil(value) ? `${(percent * 100).toFixed(2)}%` : null,\n            })\n          : content;\n      };\n    }\n\n    const LABEL_LAYOUT_TYPE_MAP = {\n      inner: '',\n      outer: 'pie-outer',\n      spider: 'pie-spider',\n    };\n    const labelLayoutType = labelCfg.type ? LABEL_LAYOUT_TYPE_MAP[labelCfg.type] : 'pie-outer';\n    const labelLayoutCfg = labelCfg.layout ? (!isArray(labelCfg.layout) ? [labelCfg.layout] : labelCfg.layout) : [];\n    labelCfg.layout = (labelLayoutType ? [{ type: labelLayoutType }] : []).concat(labelLayoutCfg);\n\n    geometry.label({\n      // fix: could not create scale, when field is undefined（attributes 中的 fields 定义都会被用来创建 scale）\n      fields: colorField ? [angleField, colorField] : [angleField],\n      callback,\n      cfg: {\n        ...labelCfg,\n        offset: adaptOffset(labelCfg.type, labelCfg.offset),\n        type: 'pie',\n      },\n    });\n  }\n  return params;\n}\n\n/**\n * statistic 中心文本配置\n * @param params\n */\nexport function pieAnnotation(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { innerRadius, statistic, angleField, colorField, meta } = options;\n  // 先清空标注，再重新渲染\n  chart.getController('annotation').clear(true);\n\n  // 先进行其他 annotations，再去渲染统计文本\n  flow(annotation())(params);\n\n  /** 中心文本 指标卡 */\n  if (innerRadius && statistic) {\n    let { title, content } = deepAssign({}, DEFAULT_OPTIONS.statistic, statistic);\n    if (title !== false) {\n      title = deepAssign({}, { formatter: (datum) => (datum ? datum[colorField] : '总计') }, title);\n    }\n    if (content !== false) {\n      content = deepAssign(\n        {},\n        {\n          formatter: (datum, data) => {\n            const metaFormatter = get(meta, [angleField, 'formatter']);\n            const dataValue = datum ? datum[angleField] : getTotalValue(data, angleField);\n            return metaFormatter ? metaFormatter(dataValue) : dataValue;\n          },\n        },\n        content\n      );\n    }\n    renderStatistic(chart, { statistic: { title, content }, plotType: 'pie' });\n  }\n\n  return params;\n}\n\n/**\n * 饼图 tooltip 配置\n * 1. 强制 tooltip.shared 为 false\n * @param params\n */\nfunction tooltip(params: Params<PieOptions>): Params<PieOptions> {\n  const { chart, options } = params;\n  const { tooltip, colorField, angleField } = options;\n\n  if (tooltip === false) {\n    chart.tooltip(tooltip);\n  } else {\n    chart.tooltip(deepAssign({}, tooltip, { shared: false }));\n\n    const fields = get(tooltip, 'fields') || [colorField, angleField];\n    let formatter = get(tooltip, 'formatter');\n\n    if (!formatter) {\n      // 主要解决 all zero， 对于非 all zero 也适用\n      formatter = (datum) => ({ name: datum[colorField], value: datum[angleField] });\n    }\n    chart.geometries[0].tooltip(fields.join('*'), getMappingFunction(fields, formatter));\n  }\n\n  return params;\n}\n\n/**\n * 饼图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<PieOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<PieOptions>>(\n    geometry,\n    meta,\n    theme,\n    coordinate,\n    legend,\n    tooltip,\n    label,\n    state,\n    /** 指标卡中心文本 放在下层 */\n    pieAnnotation,\n    interaction,\n    animation\n  )(params);\n}\n"]}