{"version":3,"file":"pie-statistic-action.js","sourceRoot":"","sources":["../../../../src/plots/pie/interactions/pie-statistic-action.ts"],"names":[],"mappings":"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","sourcesContent":["import { View, Action, Util } from '@antv/g2';\nimport { Types } from '@antv/g2';\nimport { each, get, isFunction, isString } from '@antv/util';\nimport { adapteStyle, setStatisticContainerStyle } from '../../../utils/statistic';\n/**\n * Pie 中心文本事件的 Action\n */\nexport class StatisticAction extends Action {\n  private initialAnnotation;\n\n  private getAnnotations(_view?: View): object[] {\n    const view = _view || this.context.view;\n    // @ts-ignore\n    return view.getController('annotation').option;\n  }\n\n  private getInitialAnnotation(): Types.ComponentOption[] | null {\n    return this.initialAnnotation;\n  }\n\n  init() {\n    const { view } = this.context;\n    view.removeInteraction('tooltip');\n\n    view.on('afterchangesize', () => {\n      const annotations = this.getAnnotations(view);\n      this.initialAnnotation = annotations;\n    });\n  }\n\n  public change() {\n    const { view, event } = this.context;\n    const annotations = this.getAnnotations();\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = annotations;\n    }\n\n    let { data } = event?.data || {};\n    if (event.type.match('legend-item')) {\n      const delegateObject = Util.getDelegationObject(this.context);\n      // @ts-ignore\n      const colorField = view.getGroupedFields()[0];\n      if (delegateObject && colorField) {\n        const { item } = delegateObject;\n        data = view.getData().find((d) => d[colorField] === item.value);\n      }\n    }\n\n    if (data) {\n      const annotationController = view.getController('annotation');\n      annotationController.clear(true);\n      // @ts-ignore\n      const [, angleField, colorField] = view.getScaleFields();\n      const angleScale = view.getScaleByField(angleField);\n      const colorScale = view.getScaleByField(colorField);\n\n      const annotationOptions = annotations.filter((a) => !get(a, 'key', '').match('statistic'));\n      const statisticOptions = annotations.filter((a) => get(a, 'key', '').match('statistic'));\n\n      const titleOpt = statisticOptions.filter((opt: any) => opt.key === 'top-statistic');\n      const contentOpt = statisticOptions.filter((opt: any) => opt.key === 'bottom-statistic');\n      each(statisticOptions, (option) => {\n        let text;\n        let transform;\n        if (option.key === 'top-statistic') {\n          text = colorScale ? colorScale.getText(data[colorField]) : null;\n          transform = contentOpt ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n        } else {\n          text = angleScale ? angleScale.getText(data[angleField]) : data[angleField];\n          transform = titleOpt ? 'translate(-50%, 0)' : 'translate(-50%,-50%)';\n        }\n\n        annotationOptions.push({\n          ...option,\n          html: (container, view) => {\n            const coordinate = view.getCoordinate();\n            const containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n\n            const style = isFunction(option.style) ? option.style() : option.style;\n            setStatisticContainerStyle(container, {\n              width: `${containerWidth}px`,\n              transform,\n              // user's style setting has high priority\n              ...adapteStyle(style),\n            });\n            const filteredData = view.getData();\n            if (option.customHtml) {\n              return option.customHtml(container, view, data, filteredData);\n            }\n            if (option.formatter) {\n              text = option.formatter(data, filteredData);\n            }\n            // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n            return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n          },\n        });\n        annotationOptions.forEach((opt) => {\n          // @ts-ignore\n          annotationController.annotation(opt);\n        });\n        view.render(true);\n      });\n    }\n  }\n\n  public reset() {\n    const { view } = this.context;\n    const annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    const initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, (a) => {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  }\n}\n"]}