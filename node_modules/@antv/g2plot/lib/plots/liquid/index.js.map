{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plots/liquid/index.ts"],"names":[],"mappings":";;;;AAAA,+BAAmD;AACnD,wCAAuC;AAGvC,qCAA+C;AAC/C,iCAAwC;AACxC,wBAAwB;AACxB,2BAAyB;AAIzB;;GAEG;AACH;IAA4B,kCAAmB;IAA/C;QAAA,qEAyDC;QAxDC,WAAW;QACJ,UAAI,GAAW,QAAQ,CAAC;;IAuDjC,CAAC;IArDW,kCAAiB,GAA3B;QACE,OAAO;YACL,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,GAAG;YACX,SAAS,EAAE;gBACT,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE;oBACP,SAAS,EAAE,UAAC,EAAW;4BAAT,OAAO,aAAA;wBAAO,OAAG,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAG;oBAAhC,CAAgC;oBAC5D,KAAK,EAAE;wBACL,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,MAAM;wBAChB,UAAU,EAAE,MAAM;wBAClB,SAAS,EAAE,QAAQ;qBACpB;iBACF;aACF;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,CAAC;gBACT,QAAQ,EAAE,CAAC;aACZ;YACD,IAAI,EAAE;gBACJ,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,GAAG;aACZ;SACF,CAAC;IACJ,CAAC;IAED;;;OAGG;IACI,2BAAU,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,qBAAgB,CAAC,kBAAkB,EACnC,UAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,qBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,CACtE,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;QAE/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAa,CAAC,OAAO,CAAC,CAAC,CAAC;QACxC,mBAAS,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,qBAAgB,CAAC,iBAAiB,EAClC,UAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,qBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,CACrE,CAAC;IACJ,CAAC;IAED;;OAEG;IACO,iCAAgB,GAA1B;QACE,OAAO,iBAAO,CAAC;IACjB,CAAC;IACH,aAAC;AAAD,CAAC,AAzDD,CAA4B,WAAI,GAyD/B;AAzDY,wBAAM","sourcesContent":["import { VIEW_LIFE_CIRCLE, Event } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { LiquidOptions } from './types';\nimport { adaptor, statistic } from './adaptor';\nimport { getLiquidData } from './utils';\n// register liquid shape\nimport './shapes/liquid';\n\nexport { LiquidOptions };\n\n/**\n * 传说中的水波图\n */\nexport class Liquid extends Plot<LiquidOptions> {\n  /** 图表类型 */\n  public type: string = 'liquid';\n\n  protected getDefaultOptions(): Partial<LiquidOptions> {\n    return {\n      color: '#6a99f9',\n      radius: 0.9,\n      statistic: {\n        title: false,\n        content: {\n          formatter: ({ percent }) => `${(percent * 100).toFixed(2)}%`,\n          style: {\n            opacity: 0.75,\n            fontSize: '30px',\n            lineHeight: '30px',\n            textAlign: 'center',\n          },\n        },\n      },\n      outline: {\n        border: 2,\n        distance: 0,\n      },\n      wave: {\n        count: 3,\n        length: 192,\n      },\n    };\n  }\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null)\n    );\n    this.updateOption({ percent });\n\n    this.chart.data(getLiquidData(percent));\n    statistic({ chart: this.chart, options: this.options }, true);\n\n    this.chart.emit(\n      VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA,\n      Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null)\n    );\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<LiquidOptions> {\n    return adaptor;\n  }\n}\n"]}