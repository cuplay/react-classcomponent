"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Liquid = void 0;
var tslib_1 = require("tslib");
var g2_1 = require("@antv/g2");
var plot_1 = require("../../core/plot");
var adaptor_1 = require("./adaptor");
var utils_1 = require("./utils");
// register liquid shape
require("./shapes/liquid");
/**
 * 传说中的水波图
 */
var Liquid = /** @class */ (function (_super) {
    tslib_1.__extends(Liquid, _super);
    function Liquid() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 图表类型 */
        _this.type = 'liquid';
        return _this;
    }
    Liquid.prototype.getDefaultOptions = function () {
        return {
            color: '#6a99f9',
            radius: 0.9,
            statistic: {
                title: false,
                content: {
                    formatter: function (_a) {
                        var percent = _a.percent;
                        return (percent * 100).toFixed(2) + "%";
                    },
                    style: {
                        opacity: 0.75,
                        fontSize: '30px',
                        lineHeight: '30px',
                        textAlign: 'center',
                    },
                },
            },
            outline: {
                border: 2,
                distance: 0,
            },
            wave: {
                count: 3,
                length: 192,
            },
        };
    };
    /**
     * 更新数据
     * @param percent
     */
    Liquid.prototype.changeData = function (percent) {
        this.chart.emit(g2_1.VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, g2_1.Event.fromData(this.chart, g2_1.VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null));
        this.updateOption({ percent: percent });
        this.chart.data(utils_1.getLiquidData(percent));
        adaptor_1.statistic({ chart: this.chart, options: this.options }, true);
        this.chart.emit(g2_1.VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, g2_1.Event.fromData(this.chart, g2_1.VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null));
    };
    /**
     * 获取适配器
     */
    Liquid.prototype.getSchemaAdaptor = function () {
        return adaptor_1.adaptor;
    };
    return Liquid;
}(plot_1.Plot));
exports.Liquid = Liquid;
//# sourceMappingURL=index.js.map