{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/heatmap/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, isObject } from '@antv/util';\nimport { Geometry } from '@antv/g2';\nimport { Params } from '../../core/adaptor';\nimport { findGeometry } from '../../utils';\nimport { flow, transformLabel } from '../../utils';\nimport { DEFAULT_COLORS } from '../../constant';\nimport { tooltip, interaction, animation, theme, scale, annotation, state } from '../../adaptor/common';\nimport { HeatmapOptions } from './types';\n\n/**\n * 数据字段映射\n * @param params\n */\nfunction field(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { data, type, reflect, xField, yField, colorField, sizeField, sizeRatio, shape, color } = options;\n\n  chart.data(data);\n  let geometry: Geometry;\n\n  if (type === 'density') {\n    geometry = chart.heatmap().position(`${xField}*${yField}`);\n  } else {\n    geometry = chart.polygon().position(`${xField}*${yField}`);\n  }\n\n  if (colorField) {\n    geometry.color(colorField, color || DEFAULT_COLORS.GRADIENT.CONTINUOUS);\n  }\n\n  if (reflect) {\n    chart.coordinate().reflect(reflect);\n  }\n\n  /**\n   * The ratio between the actual size and the max available size, must be in range `[0,1]`.\n   *\n   * If the `sizeRatio` attribute is undefined or it exceeds the range,\n   * `checkedSizeRatio` would be set to 1 as default.\n   */\n  let checkedSizeRatio = 1;\n  if (sizeRatio || sizeRatio === 0) {\n    if (!shape && !sizeField) {\n      console.warn('sizeRatio is not in effect: Must define shape or sizeField first');\n    } else if (sizeRatio < 0 || sizeRatio > 1) {\n      console.warn('sizeRatio is not in effect: It must be a number in [0,1]');\n    } else {\n      checkedSizeRatio = sizeRatio;\n    }\n  }\n\n  // when it has to change shape from original rect\n  if (shape) {\n    // just to change shape in cell\n    if (!sizeField) {\n      geometry.shape('', () => {\n        return [shape, 1, checkedSizeRatio];\n      });\n    }\n\n    // specific shape in different size\n    if (sizeField) {\n      const field = data.map((row) => row[sizeField]);\n      const min = Math.min(...field);\n      const max = Math.max(...field);\n\n      geometry.shape(sizeField, (v) => {\n        return [shape, (v - min) / (max - min), checkedSizeRatio];\n      });\n    }\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { legend, colorField } = options;\n\n  if (legend) {\n    chart.legend(colorField, legend);\n  } else {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 样式\n * @param params\n */\nfunction style(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { xField, yField, colorField, sizeField, heatmapStyle } = options;\n\n  const geometry = chart.geometries[0];\n  if (heatmapStyle && geometry) {\n    if (isFunction(heatmapStyle)) {\n      geometry.style(`${xField}*${yField}*${colorField}*${sizeField}`, heatmapStyle);\n    } else if (isObject(heatmapStyle)) {\n      geometry.style(heatmapStyle);\n    }\n  }\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<HeatmapOptions>): Params<HeatmapOptions> {\n  const { chart, options } = params;\n  const { label, colorField, type } = options;\n\n  const geometry = findGeometry(chart, type === 'density' ? 'heatmap' : 'polygon');\n\n  if (!label) {\n    geometry.label(false);\n  } else if (colorField) {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [colorField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 热力图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<HeatmapOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    field,\n    meta,\n    theme,\n    axis,\n    legend,\n    tooltip,\n    style,\n    label,\n    annotation(),\n    interaction,\n    animation,\n    state\n  )(params);\n}\n"]}