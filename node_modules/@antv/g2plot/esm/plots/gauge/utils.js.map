{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/plots/gauge/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAE9C,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAG/D;;;;GAIG;AACH,MAAM,UAAU,gBAAgB,CAAC,KAAe;IAC9C,OAAO,CACL,KAAK;QACH,gBAAgB;SACf,GAAG,CAAC,UAAC,CAAS,EAAE,GAAW;;QAC1B,gBAAS,GAAC,WAAW,IAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAC,UAAU,IAAG,KAAG,GAAK,KAAG;IAC9E,CAAC,CAAC;QACF,WAAW;SACV,MAAM,CAAC,UAAC,CAAQ,IAAK,OAAA,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,EAAhB,CAAgB,CAAC,CAC1C,CAAC;AACJ,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,gBAAgB,CAAC,OAAgC;;IAC/D,OAAO,WAAG,GAAC,OAAO,IAAG,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,MAAG,CAAC;AAC/C,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,YAAY,CAAC,OAAgC,EAAE,KAA6B;IAC1F,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;IAExC,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,OAAO,gBAAgB,CAAC,UAAsB,CAAC,CAAC;AAClD,CAAC","sourcesContent":["import { clamp, get, size } from '@antv/util';\nimport { Data, Datum } from '../../types';\nimport { RANGE_VALUE, RANGE_TYPE, PERCENT } from './constants';\nimport { GaugeOptions } from './types';\n\n/**\n * 将 range 生成为 data 数据\n * @param range\n * @param key\n */\nexport function processRangeData(range: number[]): Data {\n  return (\n    range\n      // 映射为 stack 的数据\n      .map((r: number, idx: number) => {\n        return { [RANGE_VALUE]: r - (range[idx - 1] || 0), [RANGE_TYPE]: `${idx}` };\n      })\n      // 去掉 0 的数据\n      .filter((d: Datum) => !!d[RANGE_VALUE])\n  );\n}\n\n/**\n * 获取 仪表盘 指针数据\n * @param percent\n */\nexport function getIndicatorData(percent: GaugeOptions['percent']): Data {\n  return [{ [PERCENT]: clamp(percent, 0, 1) }];\n}\n\n/**\n * 获取仪表盘 表盘弧形数据\n * @param percent\n * @param range\n */\nexport function getRangeData(percent: GaugeOptions['percent'], range?: GaugeOptions['range']): Data {\n  const ticks = get(range, ['ticks'], []);\n\n  const clampTicks = size(ticks) ? ticks : [0, clamp(percent, 0, 1), 1];\n  return processRangeData(clampTicks as number[]);\n}\n"]}