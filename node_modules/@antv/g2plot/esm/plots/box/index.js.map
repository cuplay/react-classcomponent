{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plots/box/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAGzC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAG1E;IAAyB,uBAAgB;IAAzC;QAAA,qEA+CC;QA9CC,WAAW;QACJ,UAAI,GAAW,KAAK,CAAC;;IA6C9B,CAAC;IA3CC;;;OAGG;IACI,wBAAU,GAAjB,UAAkB,IAAI;QACpB,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;QACpB,IAAA,MAAM,GAAK,IAAI,CAAC,OAAO,OAAjB,CAAkB;QAEhC,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,EAAE,KAAK,gBAAgB,EAAzB,CAAyB,CAAC,CAAC;QAC7E,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACO,+BAAiB,GAA3B;;QACE,OAAO,UAAU,CAAC,EAAE,EAAE,iBAAM,iBAAiB,WAAE,EAAE;YAC/C,IAAI;gBACF,GAAC,SAAS,IAAG,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE;mBAChD;YAED,SAAS;YACT,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;YAEzC,6BAA6B;YAC7B,OAAO,EAAE;gBACP,WAAW,EAAE,KAAK;gBAClB,cAAc,EAAE,IAAI;gBACpB,MAAM,EAAE,IAAI;aACb;SACF,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACO,8BAAgB,GAA1B;QACE,OAAO,OAAO,CAAC;IACjB,CAAC;IACH,UAAC;AAAD,CAAC,AA/CD,CAAyB,IAAI,GA+C5B","sourcesContent":["import { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { Adaptor } from '../../core/adaptor';\nimport { BoxOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { transformData } from './utils';\nimport { BOX_RANGE, BOX_RANGE_ALIAS, OUTLIERS_VIEW_ID } from './constant';\nexport { BoxOptions };\n\nexport class Box extends Plot<BoxOptions> {\n  /** 图表类型 */\n  public type: string = 'box';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data) {\n    this.updateOption({ data });\n    const { yField } = this.options;\n\n    const outliersView = this.chart.views.find((v) => v.id === OUTLIERS_VIEW_ID);\n    if (outliersView) {\n      outliersView.data(data);\n    }\n\n    this.chart.changeData(transformData(data, yField));\n  }\n\n  /**\n   * 获取 箱型图 默认配置项\n   */\n  protected getDefaultOptions(): Partial<BoxOptions> {\n    return deepAssign({}, super.getDefaultOptions(), {\n      meta: {\n        [BOX_RANGE]: { min: 0, alias: BOX_RANGE_ALIAS },\n      },\n\n      // 默认区域交互\n      interactions: [{ type: 'active-region' }],\n\n      // 默认 tooltips 共享，不显示 markers\n      tooltip: {\n        showMarkers: false,\n        showCrosshairs: true,\n        shared: true,\n      },\n    });\n  }\n\n  /**\n   * 获取 箱型图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BoxOptions> {\n    return adaptor;\n  }\n}\n"]}