import { __extends } from "tslib";
import { Plot } from '../../core/plot';
import { deepAssign } from '../../utils';
import { adaptor } from './adaptor';
import { transformData } from './utils';
import { BOX_RANGE, BOX_RANGE_ALIAS, OUTLIERS_VIEW_ID } from './constant';
var Box = /** @class */ (function (_super) {
    __extends(Box, _super);
    function Box() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 图表类型 */
        _this.type = 'box';
        return _this;
    }
    /**
     * @override
     * @param data
     */
    Box.prototype.changeData = function (data) {
        this.updateOption({ data: data });
        var yField = this.options.yField;
        var outliersView = this.chart.views.find(function (v) { return v.id === OUTLIERS_VIEW_ID; });
        if (outliersView) {
            outliersView.data(data);
        }
        this.chart.changeData(transformData(data, yField));
    };
    /**
     * 获取 箱型图 默认配置项
     */
    Box.prototype.getDefaultOptions = function () {
        var _a;
        return deepAssign({}, _super.prototype.getDefaultOptions.call(this), {
            meta: (_a = {},
                _a[BOX_RANGE] = { min: 0, alias: BOX_RANGE_ALIAS },
                _a),
            // 默认区域交互
            interactions: [{ type: 'active-region' }],
            // 默认 tooltips 共享，不显示 markers
            tooltip: {
                showMarkers: false,
                showCrosshairs: true,
                shared: true,
            },
        });
    };
    /**
     * 获取 箱型图 的适配器
     */
    Box.prototype.getSchemaAdaptor = function () {
        return adaptor;
    };
    return Box;
}(Plot));
export { Box };
//# sourceMappingURL=index.js.map