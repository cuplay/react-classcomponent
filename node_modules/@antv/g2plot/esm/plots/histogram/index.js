import { __extends } from "tslib";
import { Plot } from '../../core/plot';
import { deepAssign } from '../../utils';
import { binHistogram } from '../../utils/transform/histogram';
import { adaptor } from './adaptor';
var Histogram = /** @class */ (function (_super) {
    __extends(Histogram, _super);
    function Histogram() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 图表类型 */
        _this.type = 'histogram';
        return _this;
    }
    Histogram.prototype.changeData = function (data) {
        this.updateOption({ data: data });
        var _a = this.options, binField = _a.binField, binNumber = _a.binNumber, binWidth = _a.binWidth, stackField = _a.stackField;
        this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));
    };
    Histogram.prototype.getDefaultOptions = function () {
        return deepAssign({}, _super.prototype.getDefaultOptions.call(this), {
            // @ts-ignore
            columnStyle: {
                stroke: '#FFFFFF',
            },
            tooltip: {
                shared: true,
                showMarkers: false,
            },
            interactions: [{ type: 'active-region' }],
        });
    };
    /**
     * 获取直方图的适配器
     */
    Histogram.prototype.getSchemaAdaptor = function () {
        return adaptor;
    };
    return Histogram;
}(Plot));
export { Histogram };
//# sourceMappingURL=index.js.map