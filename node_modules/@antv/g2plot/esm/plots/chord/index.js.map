{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plots/chord/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAIvC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAIpC;;GAEG;AACH;IAA2B,yBAAkB;IAA7C;QAAA,qEAyDC;QAxDC,WAAW;QACJ,UAAI,GAAW,OAAO,CAAC;;IAuDhC,CAAC;IArDW,iCAAiB,GAA3B;QACE,OAAO;YACL,SAAS,EAAE;gBACT,OAAO,EAAE,CAAC;gBACV,WAAW,EAAE,CAAC;gBACd,SAAS,EAAE,CAAC;aACb;YACD,SAAS,EAAE;gBACT,OAAO,EAAE,GAAG;gBACZ,SAAS,EAAE,CAAC;aACb;YACD,KAAK,EAAE;gBACL,MAAM,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC;gBACrB,QAAQ,EAAE,UAAC,CAAW,EAAE,IAAY;oBAClC,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAClC,IAAM,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvC,OAAO;wBACL,SAAS,EAAE,IAAI;wBACf,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;yBAChB;wBACD,OAAO,SAAA;wBACP,OAAO,EAAE,IAAI;qBACd,CAAC;gBACJ,CAAC;aACF;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC;gBACrC,SAAS,EAAE,UAAC,KAAY;oBACd,IAAA,MAAM,GAAoB,KAAK,OAAzB,EAAE,MAAM,GAAY,KAAK,OAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;oBACxC,OAAO;wBACL,IAAI,EAAK,MAAM,YAAO,MAAQ;wBAC9B,KAAK,OAAA;qBACN,CAAC;gBACJ,CAAC;aACF;YACD,YAAY,EAAE;gBACZ;oBACE,IAAI,EAAE,gBAAgB;iBACvB;aACF;YACD,MAAM,EAAE,IAAI;YACZ,gBAAgB,EAAE,GAAG;YACrB,cAAc,EAAE,IAAI;SACrB,CAAC;IACJ,CAAC;IAED;;OAEG;IACO,gCAAgB,GAA1B;QACE,OAAO,OAAO,CAAC;IACjB,CAAC;IACH,YAAC;AAAD,CAAC,AAzDD,CAA2B,IAAI,GAyD9B","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { Datum } from '../../types';\nimport { ChordOptions } from './types';\nimport { adaptor } from './adaptor';\n\nexport { ChordOptions };\n\n/**\n *  弦图 Chord\n */\nexport class Chord extends Plot<ChordOptions> {\n  /** 图表类型 */\n  public type: string = 'chord';\n\n  protected getDefaultOptions() {\n    return {\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1,\n      },\n      edgeStyle: {\n        opacity: 0.5,\n        lineWidth: 2,\n      },\n      label: {\n        fields: ['x', 'name'],\n        callback: (x: number[], name: string) => {\n          const centerX = (x[0] + x[1]) / 2;\n          const offsetX = centerX > 0.5 ? -4 : 4;\n          return {\n            labelEmit: true,\n            style: {\n              fill: '#8c8c8c',\n            },\n            offsetX,\n            content: name,\n          };\n        },\n      },\n      tooltip: {\n        fields: ['source', 'target', 'value'],\n        formatter: (datum: Datum) => {\n          const { source, target, value } = datum;\n          return {\n            name: `${source} -> ${target}`,\n            value,\n          };\n        },\n      },\n      interactions: [\n        {\n          type: 'element-active',\n        },\n      ],\n      weight: true,\n      nodePaddingRatio: 0.1,\n      nodeWidthRatio: 0.05,\n    };\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<ChordOptions> {\n    return adaptor;\n  }\n}\n"]}