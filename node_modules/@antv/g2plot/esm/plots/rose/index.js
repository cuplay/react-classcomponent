import { __extends } from "tslib";
import { Plot } from '../../core/plot';
import { deepAssign } from '../../utils';
import { adaptor } from './adaptor';
var Rose = /** @class */ (function (_super) {
    __extends(Rose, _super);
    function Rose() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 玫瑰图 */
        _this.type = 'rose';
        return _this;
    }
    /**
     * @override
     * @param data
     */
    Rose.prototype.changeData = function (data) {
        this.updateOption({ data: data });
        this.chart.changeData(data);
    };
    /**
     * 获取默认的 options 配置项
     */
    Rose.prototype.getDefaultOptions = function () {
        return deepAssign({}, _super.prototype.getDefaultOptions.call(this), {
            xAxis: false,
            yAxis: false,
            legend: {
                position: 'right',
                offsetX: -10,
            },
            sectorStyle: {
                stroke: '#fff',
                lineWidth: 1,
            },
            label: {
                layout: {
                    type: 'limit-in-shape',
                },
            },
            tooltip: {
                shared: true,
                showMarkers: false,
            },
            interactions: [{ type: 'active-region' }],
        });
    };
    /**
     * 获取 玫瑰图 的适配器
     */
    Rose.prototype.getSchemaAdaptor = function () {
        return adaptor;
    };
    return Rose;
}(Plot));
export { Rose };
//# sourceMappingURL=index.js.map